pipeline {
    agent any

    stages {
        stage('apply-config') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'user', passwordVariable: 'USER_PWD', usernameVariable: 'USER_NAME')]){
                sh  "sed 's/NE/$USER_NAME/g' configmapfornode.yaml"
                sh  "sed 's/N3/$USER_PWD/g' configmapfornode.yaml"
                }
                withCredentials([usernamePassword(credentialsId: 'databseName_psRoot', passwordVariable: 'ROOT_PWD', usernameVariable: 'DB_NAME')]){
                sh  "sed 's/AM/$ROOT_PWD/g' configmapfornode.yaml"
                sh  "sed 's/DE/$DB_NAME/g' configmapfornode.yaml"
                }
                sh "/var/kubectl/kubectl apply -f configmapfornode.yaml --namespace ${namespace}" 
            }
        }
        stage('create_pod') {
            steps {
                sh "/var/kubectl/kubectl apply -f node-deployment.yaml --namespace ${namespace}"
                
            }
        }
        stage('create_nodePort_service') {
            steps {
               sh  "/var/kubectl/kubectl apply -f node-port-service.yaml --namespace ${namespace}"
            }
        }
       stage('create_ipCluster_service') {
            steps {
            // sh  "/var/kubectl/kubectl apply -f Ipcluster-service.yaml --namespace ${namespace}"
            // sh  "sed 's/AM/$ROOT_PWD/g' configmapfornode.yaml"
            sh  "sed 's/namespace/$namespace/g' Ipcluster-service.yaml"
            sh "ansible-playbook  playbook.yaml"
        }
    }
  }
}
